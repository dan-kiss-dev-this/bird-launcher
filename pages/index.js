import { useState } from "react";
import Head from "next/head";
import styled from "styled-components";

import Bird from "@/components/Bird";

const Wrapper = styled.div`
  position: relative;
  height: 405px;
  width: 720px;
  margin: 60px auto;
  background: url("/images/background1.jpeg");
  background-size: contain;
  border-radius: 8px;
  box-shadow: rgba(0, 0, 0, 0.45) 1px 1px 6px;
  pointer: cursor;
  overflow: hidden;

  & .flying-bird {
    animation: launchBird 2s 1 linear;
  }

  @keyframes launchBird {
    0% {
      transform: translate(0px, 0px);
    }
    100% {
      transform: translate(
        ${(props) => props.birdTargetX}px,
        -${(props) => props.birdTargetY}px
      );
    }
  }

  @media (max-width: 720px) {
    width: 100vw;
    height: 56.25vw;
    border-radius: 0;
  }
`;

const birdx = 50;
const birdy = 50;

export default function Home() {
  const [isBirdFlying, setIsBirdFlying] = useState(false);
  const [birdTargetX, setBirdTargetX] = useState(null);
  const [birdTargetY, setBirdTargetY] = useState(null);

  const onLaunch = (e) => {
    const leftOffset = (window.innerWidth - e.target.clientWidth) / 2;
    const topOffset = 60;

    const xclick = e.pageX - leftOffset;
    const yclick = Math.abs(e.pageY - topOffset - e.target.clientHeight);

    const slope = (yclick - birdy) / (xclick - birdx);
    const angle = Math.atan(slope);

    const xtarget = 2400 * Math.cos(angle);
    const ytarget = 1800 * Math.sin(angle);

    setBirdTargetX(xtarget);
    setBirdTargetY(ytarget);

    if (xclick > 0 && yclick > 0) {
      setIsBirdFlying(true);
    }

    if (!isBirdFlying) {
      setTimeout(() => {
        setIsBirdFlying(false);
      }, 2000);
    }
  };

  return (
    <>
      <Head>
        <title>Bird Launcher</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Wrapper
        onClick={onLaunch}
        id="background"
        birdTargetX={birdTargetX}
        birdTargetY={birdTargetY}
      >
        <Bird x={birdx} y={birdy} isBirdFlying={isBirdFlying}></Bird>
        {/* <div
          style={{
            position: "absolute",
            padding: "16px",
            top: "-60px",
            left: 0,
            fontSize: "32px",
            color: "#fff",
          }}
        >
          {Math.floor(x)},{""} {Math.floor(y)}
        </div> */}
      </Wrapper>
    </>
  );
}
